{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-07T17:16:29.874Z",
    "end": "2025-04-07T17:16:33.350Z",
    "duration": 3476,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fece8b07-225e-4026-92de-cfc1e6276961",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "422eaefa-e6d2-4755-988d-bf8d6cb2a9c9",
          "title": "LambdaTest Sample Todo App 2",
          "fullFile": "F:\\Software Development\\JavasScript\\Selenium IDE\\SeleniumTest\\tests\\thirdTest.js",
          "file": "\\tests\\thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add a new task and verify it",
              "fullTitle": "LambdaTest Sample Todo App 2 should add a new task and verify it",
              "timedOut": null,
              "duration": 3012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chai = await import('chai');\nconst should = chai.should();\nlet driver = await new Builder().forBrowser('chrome').build();\ntry {\n    await driver.get('https://lambdatest.github.io/sample-todo-app/'); \n    // Add a new task\n    await driver.findElement(By.id('sampletodotext')).sendKeys('New Task', Key.RETURN);\n    // Verify the last todo item text\n    let todoText = await driver.findElement(By.xpath('//li[last()]')).getText();\n    todoText.should.equal('New Task', 'The last todo item should be \"New Task\"');\n} finally {\n    await driver.quit();\n}",
              "err": {},
              "uuid": "5a2110ba-93a1-46ef-ae0b-2c292c1857e2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a2110ba-93a1-46ef-ae0b-2c292c1857e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3012,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "1d54b2a7-2a4d-4373-8294-596b82d4df07",
          "title": "LambdaTest Sample Todo App",
          "fullFile": "F:\\Software Development\\JavasScript\\Selenium IDE\\SeleniumTest\\tests\\secondTest.js",
          "file": "\\tests\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add a new task and verify it",
              "fullTitle": "LambdaTest Sample Todo App should add a new task and verify it",
              "timedOut": null,
              "duration": 3043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chai = await import('chai');\nconst should = chai.should();\nlet driver = await new Builder().forBrowser('chrome').build();\ntry {\n    await driver.get('https://lambdatest.github.io/sample-todo-app/'); \n    // Add a new task\n    await driver.findElement(By.id('sampletodotext')).sendKeys('New Task', Key.RETURN);\n    // Verify the last todo item text\n    let todoText = await driver.findElement(By.xpath('//li[last()]')).getText();\n    todoText.should.equal('New Task', 'The last todo item should be \"New Task\"');\n} finally {\n    await driver.quit();\n}",
              "err": {},
              "uuid": "b8b1c677-a881-40b3-b52c-751d6736dd57",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8b1c677-a881-40b3-b52c-751d6736dd57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3043,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}